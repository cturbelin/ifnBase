% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/incidence_data_loader.R
\name{load_results_for_incidence}
\alias{load_results_for_incidence}
\title{Load data for incidence computation}
\usage{
load_results_for_incidence(season, age.categories,
  syndrome.from = list(), geo = NULL, country = NULL,
  first.season = NULL, columns = list(), onset = NULL)
}
\arguments{
\item{season}{season int[1] \code{\link{calc_season}}}

\item{age.categories}{int[], breaks to compute age groups}

\item{syndrome.from}{list() parameters to create the syndrome columns it will be used to call \code{\link{compute_weekly_syndromes}}}

\item{geo}{geographic level name to load}

\item{country}{country to load}

\item{first.season}{first season participants handling parameters. could be "previous" (only for the previous season) or TRUE to activate it}

\item{columns}{list() extra columns to load in each survey data (see details)}

\item{onset}{onset_design an onset structure from \code{\link{onset_design}} to define how onset date is computed}
}
\value{
list() with intake, weekly, syndromes (vector of name of syndrome columns)
}
\description{
This function standardize the loading of data in order to compute incidence
}
\details{
syndrome.from:
syndrome parameter will indicate how to create syndrome columns in weekly. A syndrome column is just a logical value column indicating if a weekly survey match a syndrome definition
This list will be used as arguments to call \code{\link{compute_weekly_syndromes}}

Columns:
Several extra parameters can be provided:
\describe{
 \item{keep.all}{if TRUE keep all column in weekly data, if FALSE only keep a restricted list}
 \item{weekly}{Supplementary weekly columns to load see \code{\link{survey_load_results}}}
 \item{intake}{Supplementary intake columns to load see \code{\link{survey_load_results}}}
 \item{params}{list of parameters used as arguments but sometimes completed to an actual version, like onset if null is provided}
}

First season computing:

This feature compute a flag for each participant in the loaded intake indicating if the loaded season is the first participating season of the participant.

In european database all seasons are not available for all countries. In this case a censoring can be applied (considering all participants are not in their first season).
A function named `get_season_censoring(country)` should be available in the platform definition returing for a given country the season until wich data should
be censored (if the loaded i season is before or equal to this returned season year, the data will be censored for all participants)
}
